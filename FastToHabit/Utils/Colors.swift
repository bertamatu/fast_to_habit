//
//  Colors.swift
//  FastToHabit
//
//  Created by Berta Matuliauskiene on 05/10/2025.
//

import SwiftUI

/// App-wide color system with support for light and dark mode
/// Colors are now auto-generated by Xcode from Assets.xcassets
/// [Rule: Design System - Colors]
extension Color {
    
    // MARK: - Convenience Properties
    
    /// Primary text color (adapts to light/dark mode)
    static let textPrimary = Color.primary
    
    /// Secondary text color (less emphasis)
    static let textSecondary = Color.secondary
    
    // MARK: - Helper Methods
    
    /// Creates a linear gradient for fasting timer
    static var fastingGradient: LinearGradient {
        LinearGradient(
            colors: [fastingGradientStart, fastingGradientEnd],
            startPoint: .topLeading,
            endPoint: .bottomTrailing
        )
    }
    
    /// Returns appropriate text color for given background color
    /// - Parameter backgroundColor: The background color to check contrast against
    /// - Returns: White or black text color for optimal contrast
    static func textColor(for backgroundColor: Color) -> Color {
        // This is a simplified version - for production, calculate actual luminance
        return .white
    }
}

// MARK: - Color Previews

#if DEBUG
/// Preview helper for testing colors in light and dark mode
struct ColorPreview: View {
    let color: Color
    let name: String
    
    var body: some View {
        HStack {
            RoundedRectangle(cornerRadius: 8)
                .fill(color)
                .frame(width: 60, height: 60)
            
            VStack(alignment: .leading, spacing: 4) {
                Text(name)
                    .font(.headline)
                Text("Light/Dark Mode")
                    .font(.caption)
                    .foregroundColor(.secondary)
            }
            
            Spacer()
        }
        .padding()
    }
}

#Preview("Brand Colors") {
    List {
        ColorPreview(color: .brandPrimary, name: "Brand Primary")
        ColorPreview(color: .brandSecondary, name: "Brand Secondary")
        ColorPreview(color: .brandAccent, name: "Brand Accent")
    }
}

#Preview("Semantic Colors") {
    List {
        ColorPreview(color: .fastingActive, name: "Fasting Active")
        ColorPreview(color: .fastingComplete, name: "Fasting Complete")
        ColorPreview(color: .supplementReminder, name: "Supplement Reminder")
        ColorPreview(color: .supplementComplete, name: "Supplement Complete")
    }
}

#Preview("Status Colors") {
    List {
        ColorPreview(color: .success, name: "Success")
        ColorPreview(color: .warning, name: "Warning")
        ColorPreview(color: .error, name: "Error")
        ColorPreview(color: .info, name: "Info")
    }
}
#endif
